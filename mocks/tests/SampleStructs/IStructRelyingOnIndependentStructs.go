// Code generated by mockery v2.43.2. DO NOT EDIT.

package samplestructs

import mock "github.com/stretchr/testify/mock"

// IStructRelyingOnIndependentStructs is an autogenerated mock type for the IStructRelyingOnIndependentStructs type
type IStructRelyingOnIndependentStructs struct {
	mock.Mock
}

type IStructRelyingOnIndependentStructs_Expecter struct {
	mock *mock.Mock
}

func (_m *IStructRelyingOnIndependentStructs) EXPECT() *IStructRelyingOnIndependentStructs_Expecter {
	return &IStructRelyingOnIndependentStructs_Expecter{mock: &_m.Mock}
}

// ReturnNameStructRelyingOnIndependentStruct provides a mock function with given fields:
func (_m *IStructRelyingOnIndependentStructs) ReturnNameStructRelyingOnIndependentStruct() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ReturnNameStructRelyingOnIndependentStruct")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReturnNameStructRelyingOnIndependentStruct'
type IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call struct {
	*mock.Call
}

// ReturnNameStructRelyingOnIndependentStruct is a helper method to define mock.On call
func (_e *IStructRelyingOnIndependentStructs_Expecter) ReturnNameStructRelyingOnIndependentStruct() *IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call {
	return &IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call{Call: _e.mock.On("ReturnNameStructRelyingOnIndependentStruct")}
}

func (_c *IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call) Run(run func()) *IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call) Return(_a0 string) *IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call) RunAndReturn(run func() string) *IStructRelyingOnIndependentStructs_ReturnNameStructRelyingOnIndependentStruct_Call {
	_c.Call.Return(run)
	return _c
}

// ReturnSubStructNames provides a mock function with given fields:
func (_m *IStructRelyingOnIndependentStructs) ReturnSubStructNames() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ReturnSubStructNames")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReturnSubStructNames'
type IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call struct {
	*mock.Call
}

// ReturnSubStructNames is a helper method to define mock.On call
func (_e *IStructRelyingOnIndependentStructs_Expecter) ReturnSubStructNames() *IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call {
	return &IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call{Call: _e.mock.On("ReturnSubStructNames")}
}

func (_c *IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call) Run(run func()) *IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call) Return(_a0 []string) *IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call) RunAndReturn(run func() []string) *IStructRelyingOnIndependentStructs_ReturnSubStructNames_Call {
	_c.Call.Return(run)
	return _c
}

// NewIStructRelyingOnIndependentStructs creates a new instance of IStructRelyingOnIndependentStructs. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIStructRelyingOnIndependentStructs(t interface {
	mock.TestingT
	Cleanup(func())
}) *IStructRelyingOnIndependentStructs {
	mock := &IStructRelyingOnIndependentStructs{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
