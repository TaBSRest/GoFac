// Code generated by mockery v2.43.2. DO NOT EDIT.

package interfaces

import mock "github.com/stretchr/testify/mock"

// TaBSError is an autogenerated mock type for the TaBSError type
type TaBSError struct {
	mock.Mock
}

type TaBSError_Expecter struct {
	mock *mock.Mock
}

func (_m *TaBSError) EXPECT() *TaBSError_Expecter {
	return &TaBSError_Expecter{mock: &_m.Mock}
}

// Error provides a mock function with given fields:
func (_m *TaBSError) Error() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Error")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// TaBSError_Error_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Error'
type TaBSError_Error_Call struct {
	*mock.Call
}

// Error is a helper method to define mock.On call
func (_e *TaBSError_Expecter) Error() *TaBSError_Error_Call {
	return &TaBSError_Error_Call{Call: _e.mock.On("Error")}
}

func (_c *TaBSError_Error_Call) Run(run func()) *TaBSError_Error_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TaBSError_Error_Call) Return(_a0 string) *TaBSError_Error_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TaBSError_Error_Call) RunAndReturn(run func() string) *TaBSError_Error_Call {
	_c.Call.Return(run)
	return _c
}

// GetMessage provides a mock function with given fields:
func (_m *TaBSError) GetMessage() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetMessage")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// TaBSError_GetMessage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMessage'
type TaBSError_GetMessage_Call struct {
	*mock.Call
}

// GetMessage is a helper method to define mock.On call
func (_e *TaBSError_Expecter) GetMessage() *TaBSError_GetMessage_Call {
	return &TaBSError_GetMessage_Call{Call: _e.mock.On("GetMessage")}
}

func (_c *TaBSError_GetMessage_Call) Run(run func()) *TaBSError_GetMessage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TaBSError_GetMessage_Call) Return(_a0 string) *TaBSError_GetMessage_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TaBSError_GetMessage_Call) RunAndReturn(run func() string) *TaBSError_GetMessage_Call {
	_c.Call.Return(run)
	return _c
}

// NewTaBSError creates a new instance of TaBSError. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTaBSError(t interface {
	mock.TestingT
	Cleanup(func())
}) *TaBSError {
	mock := &TaBSError{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
